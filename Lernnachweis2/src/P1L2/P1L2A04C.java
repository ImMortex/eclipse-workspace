//Namen: Christian Gurski [4067886], Florian Ryll [4068296]

package P1L2;

import static org.junit.jupiter.api.Assertions.*;

import java.io.IOException;
import java.util.Arrays;

import org.junit.jupiter.api.Test;

class P1L2A04C {

	@Test
	void testVorgabe() throws IOException {

		int[][] bild0 = { //
				{ 1, 1, 0, 1, 1 }, //
				{ 1, 0, 0, 1, 0 }, //
				{ 0, 0, 0, 1, 0 }, //
				{ 0, 1, 0, 1, 0 }, //
				{ 0, 1, 0, 1, 0 }, //
		};
		int[][] bild0l = { //
				{ 2, 2, 0, 3, 3 }, //
				{ 2, 0, 0, 3, 0 }, //
				{ 0, 0, 0, 3, 0 }, //
				{ 0, 4, 0, 3, 0 }, //
				{ 0, 4, 0, 3, 0 }, //
		};

		assertArrayEquals(P1L2A04B.getObjectsInPicture(bild0), bild0l);
	}

	@Test
	void testBreitformat() throws IOException {
		int[][] bild1 = { //
				{ 1, 0, 1, 0, 1, 1, 1 }, //
				{ 1, 1, 1, 0, 1, 0, 0 }, //
				{ 1, 0, 1, 0, 0, 1, 1 }, //
				{ 0, 1, 0, 0, 1, 0, 0 }, //
				{ 1, 0, 1, 0, 1, 1, 1 }, //
				{ 1, 1, 1, 0, 1, 0, 0 }, //
		};

		int[][] bild1l = { //
				{ 2, 0, 2, 0, 3, 3, 3 }, //
				{ 2, 2, 2, 0, 3, 0, 0 }, //
				{ 2, 0, 2, 0, 0, 4, 4 }, //
				{ 0, 5, 0, 0, 6, 0, 0 }, //
				{ 7, 0, 7, 0, 6, 6, 6 }, //
				{ 7, 7, 7, 0, 6, 0, 0 },//
		};
		assertTrue(Arrays.deepEquals(P1L2A04B.getObjectsInPicture(bild1), bild1l));
	}

	@Test
	void testNichts() throws IOException {

		int[][] bild2 = {};
		int[][] bild2l = {};

		assertTrue(Arrays.deepEquals(P1L2A04B.getObjectsInPicture(bild2), bild2l));
	}

	@Test
	void testYinUndYang() throws IOException {

		int[][] bild3 = { //
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0 },
				{ 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0 },
				{ 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0 },
				{ 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0 },
				{ 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0 },
				{ 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0 },
				{ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
				{ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
				{ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
				{ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
				{ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
				{ 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
				{ 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
				{ 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
				{ 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 },
				{ 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 },
				{ 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 },
				{ 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 },
				{ 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0 },
				{ 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, };

		int[][] bild3l = { //
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0 },
				{ 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0 },
				{ 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0 },
				{ 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 8, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0 },
				{ 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 8, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0 },
				{ 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0 },
				{ 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2 },
				{ 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2 },
				{ 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2 },
				{ 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 },
				{ 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 },
				{ 10, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 },
				{ 10, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 },
				{ 10, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 },
				{ 0, 11, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0 },
				{ 0, 11, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0 },
				{ 0, 0, 12, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0 },
				{ 0, 0, 12, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0 },
				{ 0, 0, 0, 13, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0 },
				{ 0, 0, 0, 0, 14, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 15, 15, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 16, 16, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, };

		assertTrue(Arrays.deepEquals(P1L2A04B.getObjectsInPicture(bild3), bild3l));
	}

	@Test
	void testLForm() throws IOException {

		int[][] bild4 = { //
				{ 0 }, //
				{ 0 }, //
				{ 1 }, //
				{ 1, 1 } //
		};
		int[][] bild4l = { //
				{ 0 }, //
				{ 0 }, //
				{ 2 }, //
				{ 2, 2 } //
		};

		assertTrue(Arrays.deepEquals(P1L2A04B.getObjectsInPicture(bild4), bild4l));
	}

	@Test
	void testNullen() throws IOException {

		int[][] bild5 = { //
				{ 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0 }, //
		};
		int[][] bild5l = { //
				{ 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0 }, //
		};

		assertTrue(Arrays.deepEquals(P1L2A04B.getObjectsInPicture(bild5), bild5l));
		// assertTrue(Arrays.deepEquals(P1L2A04B.getObjectsInPicture("D:/Dokumente/BAI/Programmierung/bild1.txt"),
		// bild1l));
	}

}
